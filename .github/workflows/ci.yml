name: CI/CD Workflow

on:
  push:
    branches:
      - main  # main 브랜치에 푸시되면 자동 실행
  pull_request:
    branches:
      - main  # main 브랜치에 PR이 발생하면 자동 실행

jobs:
  test:
    runs-on: ubuntu-latest  # 실행 환경 (여기서는 Ubuntu)

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 코드를 GitHub에서 가져옴

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8  # 사용할 파이썬 버전 설정

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # 필요한 패키지 설치

      - name: Run tests
        run: |
          pytest  # 테스트 실행

  build:
    runs-on: ubuntu-latest
    needs: test  # 'test' job이 성공적으로 완료되어야만 'build' job이 실행됨

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  # Docker 빌드를 위한 Buildx 설정

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub 로그인 정보
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t my-app .
          docker tag my-app myusername/my-app:latest
          docker push myusername/my-app:latest  # Docker Hub에 이미지 푸시

      - name: Run tests
        run: |
          pytest tests/  # tests 폴더 안의 테스트 파일을 실행